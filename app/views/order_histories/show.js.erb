// agrega informacion a la segunda parte del historial
$('.order_info_block_body').empty()
$('.order_info_block_body').append(" <%= escape_javascript(render partial: 'order_history_products_block.html.erb', locals: { single_combos: @single_combos, multi_combos: @multi_combos, product_name_hash: @product_name_hash}).html_safe %> ")


// encuentra el promedio de cada producto para ofertas individuales
function getAverage() {
	history_lists = $('.combo_product_history_list');
	// arreglo de listas
	$.each(history_lists, function(index, value) {
		children_array = $(value).children('.combo_product_history')
		sum = 0
		quantity = 0
		// arreglo de ofertas
		$.each(children_array, function(index, value) {
			sum += parseFloat($(value).attr('data-price'))
			++quantity
		})
		average = sum/quantity
		average_message = " <%= t 'average_abv' %>: $" + average
		$(value).children('.product_average_container').text(average_message);

		// indica la divergencia del promedio para cada producto
		console.log(children_array);
		setAvgArrows(children_array, average);


	})
}


// recibe un arreglo de ofertas individuales
function setAvgArrows(array, average) {
	$.each(array, function(index, value) {
		id = $(value).attr('data-combo-history-id')
		price = $(value).attr('data-price')
		difference = Math.round(-1 * (average - price) / average * 100).toFixed(0);

		if (difference >= 0) {
			$('.combo_product_history[data-combo-history-id=' + id + '] .product_history_difference').addClass('up')
		} else {
			$('.combo_product_history[data-combo-history-id=' + id + '] .product_history_difference').addClass('down')
		};
		$('.combo_product_history[data-combo-history-id=' + id + '] .difference_percentage').text('%' + difference)
	})
}

getAverage()

function stepIndividualOffers(direccion) {
	// left or right
	
}
