// Este limpio la lista al cambiar de orden
$('.provider_box').remove()
$('.offer_list').empty()
$('.order_product_list').empty()
$('.column.order_info').removeClass('active')
$('.column.order_info').children().empty()
$('.order_product_info_container').append('<ul class="order_product_info_list"></ul>')
$('.info_tab_button').remove()

// tab de informacion debe estar actualizado
// <div class="order_title_container"></div>
// 		<div class="order_product_info_container"></div>
// 		<div class="order_comment_container"></div>
// 		<div class="order_date_container"></div>

$('.order_title_container').append('<%= j @order.title %>')
<% if @order.comment %>
	$('.order_comment_container').append('<%= j @order.comment.content %>')
<% end %>



<% if @order.due_date_past? %>
	<% @providers.each do |provider| %>
		$('.orders .provider_list').append("<%= j render partial: 'provider_box.html.erb', locals: {provider: provider}%>")
	<% end %>

	<% @order.offers.each do |offer| %>
		$('.offer_list').append("<%= j render partial: 'buyer_offer_status_form.html.erb', locals: {f: offer}%>")
		$('.order_product_list').prepend("<%= j render partial: 'selected_offer_box.html.erb', locals: {f: offer}%>")
	<% end %>

	// agrega combos
	<% @order.combos.each do |combo| %>
		$('.offer_list').append("<%= j render partial: 'offers/combo_box.html.erb', locals: {f: combo, function: 'order'}%>")
		$('.order_product_list').append("<%= j render partial: 'selected_combo_box.html.erb', locals: {f: combo}%>")										
	<% end %>
<% end %>

<% @order.order_products.each do |order_product| %>
	$('.order_product_info_list').append("<%= j render partial: 'tab_product_info.html.erb', locals: {f: order_product}%>") // actualizar el tab	
<% end %>
// Se pueda acceder al tab de informacion con un boton
$('.column.order_products').append("<div class='info_tab_button'></div>")




// Los productos del provedor indicado se vuelvan visibles
$('.provider_box').on('click', function(e) {
	$('.offer_product_box.active').removeClass('active')	
	idToCheck = $(e.target).attr('data-attribute-user-id')
	$('.offer_product_box[data-attribute-user-id=' + idToCheck + ']').addClass('active')
	$('.combo_box[data-attribute-user-id=' + idToCheck + ']').addClass('active')
})

$('.offer_detail_form input').on('click', function(e){
	$(e.target).closest('.offer_product_box').addClass('deletion_candidate')
})

$('.order_product_list').append("<%= j render partial: 'offer_selection_form.html.erb', locals: {f: @order}%>")

$('.offer_selection_button').on('click', function(e) {
	$(e.target).attr('type', 'button').prop('disabled', true)
	idToCheck = $(e.target).attr('data-offer-id')
	prodID = $(e.target).attr('data-product-id')
	$('.offer_deselection_button[data-offer-id=' + idToCheck + ']').prop('disabled', false)
	$('.order_product_list input[data-offer-id=' + idToCheck + ']').trigger('click')
	$('.selected_offer_box[data-offer-id=' + idToCheck + ']').addClass('selected')
	prodSelUpdate(prodID, "select");
})

$('.offer_deselection_button').on('click', function(e) {
	$(e.target).attr('type', 'button').prop('disabled', true)
	idToCheck = $(e.target).attr('data-offer-id')
	prodID = $(e.target).attr('data-product-id')	
	$('.offer_selection_button[data-offer-id=' + idToCheck + ']').prop('disabled', false)
	$('.order_product_list input[data-offer-id=' + idToCheck + ']').trigger('click')
	$('.selected_offer_box[data-offer-id=' + idToCheck + ']').removeClass('selected')
	prodSelUpdate(prodID, "deselect");
})

$('.combo_selection_button').on('click', function(e) {
	$(e.target).attr('type', 'button').prop('disabled', true)
	idToCheck = $(e.target).attr('data-combo-id')
	$('.combo_deselection_button[data-combo-id=' + idToCheck + ']').prop('disabled', false)
	$('.order_product_list input[data-combo-id=' + idToCheck + ']').trigger('click')
	$('.selected_combo_box[data-combo-id=' + idToCheck + ']').addClass('selected')
	comboSelUpdate(idToCheck, "select");
})

$('.combo_deselection_button').on('click', function(e) {
	$(e.target).attr('type', 'button').prop('disabled', true)
	idToCheck = $(e.target).attr('data-combo-id')
	$('.combo_selection_button[data-combo-id=' + idToCheck + ']').prop('disabled', false)
	$('.order_product_list input[data-combo-id=' + idToCheck + ']').trigger('click')
	$('.selected_combo_box[data-combo-id=' + idToCheck + ']').removeClass('selected')
	comboSelUpdate(idToCheck, "deselect");
})


$('.info_tab_button').on('click', function() {
	$('.column.order_info').addClass('active')
})

$('.info_tab_close_button').on('click', function() {
	$('.column.order_info').removeClass('active')
})



// tab de info debe actualizar la cantidad de productos seleccionados
function prodSelUpdate(prodId, mode) {
	offerQuantity = parseInt($('.background_box[data-product-id=' + prodId + ']').text());
	infoTabProdChange(prodId, offerQuantity, mode); //debe de actualizar el string en tab de informacion

}

function comboSelUpdate(comboId, mode) {
	products = $('.combo_box[data-combo-id='+ comboId + '] .product_list_area').children()
	for(var i =0; i < products.length; i++) {
		productId = $(products[i]).attr('data-product-id');
		quantity = parseInt($(products[i]).attr('data-product-units'));
		infoTabProdChange(productId, quantity, mode)
	}
}

// recibe el cantidad, el modo y la identificacion de producto y actualiza el tab de informacion
function infoTabProdChange(prodId, offerQuantity, mode ) {
	productInfoArray = $('.product_quantity_container[data-product-id=' + prodId + ']').text().split("/");
	tabQuantity = parseInt(productInfoArray[0]);
	objectiveQuantity = productInfoArray[1];

	if (mode == "select") {
		newQuantity = tabQuantity + offerQuantity;
	} else if (mode == "deselect") {
		newQuantity = tabQuantity - offerQuantity;
	};
	newString = newQuantity.toString() + "/" + objectiveQuantity
	console.log(newQuantity.toString() + "/" + objectiveQuantity)
	target = $('.product_quantity_container[data-product-id=' + prodId + ']');
	target.text(newString);
	target.closest('.product_main_info').toggleClass('changed')

}


// Revela/esconde el comentrio de cada producto en into tabQuantity
$('.product_main_info').on('click', function(e) {
	if ($(e.target).hasClass('active')) {
		$(e.target).removeClass('active')
		$(e.target).siblings('.product_comment_container').removeClass('active')		
	} else {
		$(e.target).addClass('active')
		$(e.target).siblings('.product_comment_container').addClass('active')	
	}
})